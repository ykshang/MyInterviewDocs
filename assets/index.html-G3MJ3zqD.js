import{_ as i,c as a,a as n,o as e}from"./app-CrDOs8BQ.js";const p={};function t(l,s){return e(),a("div",null,s[0]||(s[0]=[n(`<p><strong>压缩是一种将数据进行压缩以减少文件大小的技术</strong> ，从而加快数据传输速度和减少网络带宽消耗。在 Web 开发中，使用压缩可以大幅减小传输文件的大小，提高页面加载速度。</p><p>启用 Gzip 压缩和解压缩需要在 HTTP 请求中设置正确的请求头。对于浏览器请求资源，服务器可以通过设置响应头来启用 Gzip 压缩。</p><p><strong>下面是如何做到这一点的示例</strong>：</p><p><strong>服务器端</strong>，例如使用 Node.js 和 Express 框架，可以使用<code>compression</code>中间件来自动启用 Gzip 压缩。安装<code>compression</code>中间件后，使用以下代码将它应用到 Express 应用程序：</p><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">compression</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">require</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">compression</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">express</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">require</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">express</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">app</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">express</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">use</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">compression</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">());</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这将自动在每个响应中添加适当的<code>Content-Encoding</code>头来指示浏览器使用 Gzip 解压缩响应。</p><p>对于其他服务器端语言或框架，可以在 HTTP 响应头中手动添加<code>Content-Encoding: gzip</code>来启用 Gzip 压缩。例如，在 PHP 中，可以使用以下代码在响应中添加头部：</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;?</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">php</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">header</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Content-Encoding:</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">gzip</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">输出被Gzip压缩的内容</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在前端，浏览器会自动处理 Gzip 解压缩。当浏览器收到响应时，如果检测到<code>Content-Encoding: gzip</code>头，它会自动解压缩内容。</p><p>在发送 HTTP 请求时，浏览器会自动在<code>Accept-Encoding</code>头中包含支持的压缩算法。服务器可以根据这个头来决定是否对返回的内容进行压缩。通常情况下，现代浏览器都支持 Gzip 压缩，并在请求时自动包含<code>Accept-Encoding: gzip</code>头；因此服务器可以根据这些头来决定是否启用压缩。</p><p>如果服务器启用了 Gzip 压缩，那么在 HTTP 响应中的<code>Content-Encoding</code>字段会被设置为<code>gzip</code>，表明内容已经被压缩。浏览器会自动解压缩这些内容，并将其用于页面展示。</p>`,11)]))}const k=i(p,[["render",t],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/Network/kcl5ppby/","title":"Gzip 压缩","lang":"zh-CN","frontmatter":{"title":"Gzip 压缩","createTime":"2025/03/15 12:57:39","permalink":"/Network/kcl5ppby/"},"headers":[],"readingTime":{"minutes":1.73,"words":519},"git":{"updatedTime":1742050940000,"contributors":[{"name":"kangkang shang","username":"kangkang shang","email":"535634238@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/kangkang shang?v=4","url":"https://github.com/kangkang shang"}]},"filePathRelative":"notes/Network/11.Gzip 压缩.md"}');export{k as comp,d as data};
