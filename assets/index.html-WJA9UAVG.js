import{_ as a,c as i,a as n,o as p}from"./app-CrDOs8BQ.js";const l={};function e(h,s){return p(),i("div",null,s[0]||(s[0]=[n(`<h2 id="一、概念" tabindex="-1"><a class="header-anchor" href="#一、概念"><span>一、概念</span></a></h2><p>虚拟 DOM（Virtual DOM）是一种用于优化 Web 应用性能的技术。它是一个轻量级的 JavaScript 对象，用来描述真实 DOM 的结构和状态。虚拟 DOM 并不是直接操作浏览器的 DOM，而是通过对比新旧虚拟 DOM 的差异，计算出最小的更新操作，再将这些操作应用到真实 DOM 上。</p><h2 id="二、核心原理" tabindex="-1"><a class="header-anchor" href="#二、核心原理"><span>二、核心原理</span></a></h2><h3 id="_1-在内存中维护一个虚拟-dom-结构" tabindex="-1"><a class="header-anchor" href="#_1-在内存中维护一个虚拟-dom-结构"><span>1. 在内存中维护一个虚拟 DOM 结构</span></a></h3><p>虚拟 DOM 是一个轻量级的 JavaScript 对象树，用于描述真实 DOM 的结构。每个节点包含标签名（tag）、属性（props）、子节点（children）等信息，例如：</p><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">Vue中的VNode示例</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">tag</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">div</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">props</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">app</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">children</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">tag</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">p</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">props</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{},</span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">children</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">节点内容</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-通过-diff-算法对比新旧虚拟-dom-的差异" tabindex="-1"><a class="header-anchor" href="#_2-通过-diff-算法对比新旧虚拟-dom-的差异"><span>2. 通过 Diff 算法对比新旧虚拟 DOM 的差异</span></a></h3><p>当数据变化时，生成新的虚拟 DOM 树，并与旧树进行对比。Diff 算法通过以下策略优化比较过程：</p><ul><li><strong>同层比较</strong>：仅对比同一层级的节点，避免跨层级遍历，复杂度从 O(n³)降至 O(n)。</li><li><strong>Key 优化</strong>：为列表项添加唯一<code>key</code>，帮助算法识别节点移动或复用，减少不必要的 DOM 操作。</li><li><strong>差异类型标记</strong>：记录节点的替换（REPLACE）、属性修改（PROPS）、文本修改（TEXT）、子节点顺序调整（REORDER）等差异。</li></ul><h3 id="_3-批量更新真实-dom" tabindex="-1"><a class="header-anchor" href="#_3-批量更新真实-dom"><span>3. 批量更新真实 DOM</span></a></h3><p>根据 Diff 结果生成“补丁”（Patches），仅对真实 DOM 中变化的部分进行更新，而非全量渲染，从而减少性能损耗。</p><h2 id="三、工作流程" tabindex="-1"><a class="header-anchor" href="#三、工作流程"><span>三、工作流程</span></a></h2><h3 id="_1、构建虚拟-dom-树" tabindex="-1"><a class="header-anchor" href="#_1、构建虚拟-dom-树"><span>1、构建虚拟 DOM 树</span></a></h3><p>通过 JavaScript 对象模拟 DOM 结构。例如，React 使用 JSX 语法，Vue 通过<code>h()</code>函数生成虚拟节点（VNode）311。</p><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">Snabbdom创建VNode示例:cite[5]</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">vnode</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">h</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">div#container</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">style</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">red</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">h</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">h1</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Virtual</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">DOM</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">),</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">]);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、渲染初始-dom" tabindex="-1"><a class="header-anchor" href="#_2、渲染初始-dom"><span>2、渲染初始 DOM</span></a></h3><p>将虚拟 DOM 树转换为真实 DOM 并插入页面：</p><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">rootNode</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">vnode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">render</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">递归生成真实DOM节点</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">document</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">body</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">appendChild</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">rootNode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">插入页面:cite[10]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、数据变化触发更新" tabindex="-1"><a class="header-anchor" href="#_3、数据变化触发更新"><span>3、数据变化触发更新</span></a></h3><p>当状态变化时，生成新的虚拟 DOM 树，并与旧树进行 Diff 比较：</p><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">newVNode</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">h</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">div#container</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">style</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">blue</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[...]);</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">新树</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">patches</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span class="space"> </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">diff</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">oldVNode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">newVNode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">计算差异:cite[8]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、应用差异-patch-阶段" tabindex="-1"><a class="header-anchor" href="#_4、应用差异-patch-阶段"><span>4、应用差异（Patch 阶段）</span></a></h3><p>根据差异记录更新真实 DOM：</p><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">patch</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">oldVNode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">patches</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">仅更新变化的部分:cite[5]:cite[10]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>替换节点</strong>：直接替换旧节点。</li><li><strong>修改属性</strong>：更新 DOM 元素的<code>class</code>、<code>style</code>等。</li><li><strong>调整子节点顺序</strong>：通过插入、删除或移动操作优化渲染。</li></ul><h2 id="四、优缺点" tabindex="-1"><a class="header-anchor" href="#四、优缺点"><span>四、优缺点</span></a></h2><h3 id="_1、优点" tabindex="-1"><a class="header-anchor" href="#_1、优点"><span>1、优点</span></a></h3><ol><li><p><strong>性能优化</strong></p><ul><li><p>减少直接 DOM 操作次数，避免频繁重排/重绘。</p></li><li><p>批量更新机制，合并多次数据变更，提升渲染效率。2</p></li></ul></li><li><p><strong>跨平台能力</strong></p><ul><li>虚拟 DOM 抽象了渲染逻辑，可适配不同平台（如浏览器、移动端、小程序），实现“一次编写，多端运行”。</li></ul></li><li><p><strong>开发体验提升</strong></p><ul><li><p>数据驱动视图，开发者无需手动操作 DOM。</p></li><li><p>框架（如 React、Vue）封装 Diff 和 Patch 过程，简化复杂度。</p></li></ul></li></ol><h3 id="_2、缺点" tabindex="-1"><a class="header-anchor" href="#_2、缺点"><span>2、缺点：</span></a></h3><ol><li><strong>额外内存消耗</strong>： <ul><li>虚拟 DOM 需要在内存中维护一份额外的 JavaScript 对象表示，它与真实 DOM 所占用的内存相比可能会有额外的开销。但通常情况下，这些开销在现代浏览器中并不是主要问题，可以被接受。</li></ul></li><li><strong>学习曲线</strong><ol><li>虚拟 DOM 的概念和使用过程需要一定的学习和理解成本。</li><li>开发人员需要了解虚拟 DOM 的工作原理，并学习如何使用虚拟 DOM API 或框架提供的相关工具来创建和更新虚拟 DOM。</li></ol></li><li><strong>某些场景下不必要</strong>： <ol><li>对于简单静态页面或只有少量交互的应用程序，虚拟 DOM 可能会显得过于复杂，不值得引入。</li><li>在这些情况下，直接操作原生 DOM 可能更简单高效。</li></ol></li></ol><h2 id="五、实际应用与优化策略" tabindex="-1"><a class="header-anchor" href="#五、实际应用与优化策略"><span>五、实际应用与优化策略</span></a></h2><h3 id="_1、列表渲染" tabindex="-1"><a class="header-anchor" href="#_1、列表渲染"><span>1、列表渲染</span></a></h3><p>为列表项添加唯一<code>key</code>，帮助 Diff 算法高效识别节点移动。</p><h3 id="_2、组件优化" tabindex="-1"><a class="header-anchor" href="#_2、组件优化"><span>2、组件优化</span></a></h3><p>通过<code>shouldComponentUpdate</code>（React）或计算属性（Vue）避免不必要的渲染。</p><h3 id="_3、框架选择" tabindex="-1"><a class="header-anchor" href="#_3、框架选择"><span>3、框架选择</span></a></h3><p>Vue 基于 Snabbdom 实现虚拟 DOM，React 则通过 Fiber 架构优化 Diff 过程。</p><h2 id="六、总结" tabindex="-1"><a class="header-anchor" href="#六、总结"><span>六、总结</span></a></h2><p>虚拟 DOM 的核心价值是<strong>在开发效率与性能之间找到平衡</strong>。对于大多数 Web 应用，它通过减少 DOM 操作次数、自动化更新流程，显著提升了复杂界面的渲染性能，同时让代码更易维护。</p>`,39)]))}const k=a(l,[["render",e],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/WebBasic/bydvnw8y/","title":"什么是虚拟 DOM？","lang":"zh-CN","frontmatter":{"title":"什么是虚拟 DOM？","createTime":"2025/03/15 13:21:27","permalink":"/WebBasic/bydvnw8y/"},"headers":[],"readingTime":{"minutes":3.9,"words":1171},"git":{"updatedTime":1742050940000,"contributors":[{"name":"kangkang shang","username":"kangkang shang","email":"535634238@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/kangkang shang?v=4","url":"https://github.com/kangkang shang"}]},"filePathRelative":"notes/WebBasic/1.Web 基础/10.什么是虚拟 DOM？.md"}');export{k as comp,d as data};
