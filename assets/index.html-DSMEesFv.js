import{_ as i,c as a,a as n,o as l}from"./app-CrDOs8BQ.js";const e={};function t(p,s){return l(),a("div",null,s[0]||(s[0]=[n(`<p>RESTful API 是一种基于 HTTP 协议的 Web 服务架构风格，它以资源为中心，通过 HTTP 方法（如 GET、POST、PUT、DELETE）对资源进行操作。</p><ol><li><strong>使用清晰的资源命名</strong>：API 的端点应该使用名词，而不是动词。例如，使用<code>&quot;/users&quot;</code>来表示用户资源的集合，使用<code>&quot;/users/{id}&quot;</code> 来表示单个用户资源。</li><li><strong>使用 HTTP 方法进行操作</strong>：使用 HTTP 的不同方法（GET、POST、PUT、DELETE）对资源进行不同的操作。GET 用于获取资源，POST 用于创建资源，PUT 用于更新资源，DELETE 用于删除资源。</li><li><strong>使用 HTTP 状态码</strong>：正确使用 HTTP 状态码可以提供有关请求结果的信息。常见的状态码有 200 表示成功，201 表示资源创建成功，400 表示客户端请求错误，404 表示资源不存在等。</li><li><strong>使用资源版本控制</strong>：在 API 中引入版本控制是一种良好的实践，可以确保对 API 进行更改时不会破坏现有的客户端应用程序。</li><li><strong>使用合适的数据格式</strong>：常见的数据格式包括 <code>JSON</code> 和 <code>XML</code>，但根据需求也可以选择其他的格式。JSON 是当前最常用的格式，因为它是轻量级的、易于阅读和解析的。</li><li><strong>使用正确的 HTTP 头部信息</strong>：使用合适的 <code>Content-Type</code> 头部信息来指示请求或响应中的数据格式，并使用合适的 Accept 头部信息来指示客户端期望的响应数据格式。</li><li><strong>使用 URI 来表示关系</strong>：在 URL 中使用合适的路径表示资源之间的层次关系或关联关系，遵循 Restful 风格。</li><li><strong>提供合适的错误处理</strong>：在 API 中，要提供清晰和有用的错误信息，包括错误代码、错误消息和可能的解决方案。</li><li><strong>使用认证和授权机制</strong>：对于需要身份验证和授权的 API 操作，应该实施适当的安全措施，如使用 API 密钥、OAuth 等来保护资源的访问。</li></ol><p><strong>RESTful API</strong> 是一种基于 <strong>REST（Representational State Transfer，表述性状态转移）</strong> 架构风格设计的 Web API。它是一种设计规范，用于创建可扩展、可维护和易于理解的 Web 服务。RESTful API 的核心思想是通过 HTTP 协议的标准方法（如 GET、POST、PUT、DELETE 等）对资源进行操作。</p><p>以下是 RESTful API 的主要规范和原则：</p><hr><h3 id="_1-资源-resources" tabindex="-1"><a class="header-anchor" href="#_1-资源-resources"><span>1. <strong>资源（Resources）</strong></span></a></h3><ul><li>RESTful API 的核心是资源，每个资源都有一个唯一的标识符（URI/URL）。</li><li>资源可以是任何东西，如用户、订单、产品等。</li><li>示例： <ul><li><code>/users</code>：表示用户集合。</li><li><code>/users/123</code>：表示 ID 为 123 的单个用户。</li></ul></li></ul><hr><h3 id="_2-http-方法-http-methods" tabindex="-1"><a class="header-anchor" href="#_2-http-方法-http-methods"><span>2. <strong>HTTP 方法（HTTP Methods）</strong></span></a></h3><p>RESTful API 使用标准的 HTTP 方法来操作资源：</p><ul><li><strong>GET</strong>：获取资源。 <ul><li>示例：<code>GET /users</code> 获取所有用户，<code>GET /users/123</code> 获取 ID 为 123 的用户。</li></ul></li><li><strong>POST</strong>：创建资源。 <ul><li>示例：<code>POST /users</code> 创建一个新用户。</li></ul></li><li><strong>PUT</strong>：更新资源（替换整个资源）。 <ul><li>示例：<code>PUT /users/123</code> 更新 ID 为 123 的用户。</li></ul></li><li><strong>PATCH</strong>：部分更新资源。 <ul><li>示例：<code>PATCH /users/123</code> 更新 ID 为 123 用户的部分信息。</li></ul></li><li><strong>DELETE</strong>：删除资源。 <ul><li>示例：<code>DELETE /users/123</code> 删除 ID 为 123 的用户。</li></ul></li></ul><hr><h3 id="_3-无状态-stateless" tabindex="-1"><a class="header-anchor" href="#_3-无状态-stateless"><span>3. <strong>无状态（Stateless）</strong></span></a></h3><ul><li>每次请求都必须包含所有必要的信息，服务器不会保存客户端的状态。</li><li>客户端需要自己管理状态（如通过 token 或 session）。</li></ul><hr><h3 id="_4-统一接口-uniform-interface" tabindex="-1"><a class="header-anchor" href="#_4-统一接口-uniform-interface"><span>4. <strong>统一接口（Uniform Interface）</strong></span></a></h3><ul><li>RESTful API 的设计应该简单、一致，易于理解和使用。</li><li>包括： <ul><li>资源的唯一标识（URI）。</li><li>通过标准 HTTP 方法操作资源。</li><li>资源的自描述性（如通过 JSON 或 XML 格式返回数据）。</li></ul></li></ul><hr><h3 id="_5-资源的表现层-representation" tabindex="-1"><a class="header-anchor" href="#_5-资源的表现层-representation"><span>5. <strong>资源的表现层（Representation）</strong></span></a></h3><ul><li>资源可以有多种表现形式（如 JSON、XML、HTML 等）。</li><li>客户端和服务器通过协商（如 <code>Accept</code> 和 <code>Content-Type</code> 头）决定使用哪种格式。</li><li>示例： <ul><li>请求头：<code>Accept: application/json</code>。</li><li>响应头：<code>Content-Type: application/json</code>。</li></ul></li></ul><hr><h3 id="_6-状态码-status-codes" tabindex="-1"><a class="header-anchor" href="#_6-状态码-status-codes"><span>6. <strong>状态码（Status Codes）</strong></span></a></h3><ul><li>使用标准的 HTTP 状态码表示请求结果： <ul><li><strong>2xx</strong>：成功。 <ul><li><code>200 OK</code>：请求成功。</li><li><code>201 Created</code>：资源创建成功。</li><li><code>204 No Content</code>：请求成功，但无返回内容。</li></ul></li><li><strong>3xx</strong>：重定向。 <ul><li><code>301 Moved Permanently</code>：资源永久移动。</li><li><code>302 Found</code>：资源临时移动。</li></ul></li><li><strong>4xx</strong>：客户端错误。 <ul><li><code>400 Bad Request</code>：请求无效。</li><li><code>401 Unauthorized</code>：未授权。</li><li><code>404 Not Found</code>：资源不存在。</li></ul></li><li><strong>5xx</strong>：服务器错误。 <ul><li><code>500 Internal Server Error</code>：服务器内部错误。</li><li><code>503 Service Unavailable</code>：服务不可用。</li></ul></li></ul></li></ul><hr><h3 id="_7-版本控制-versioning" tabindex="-1"><a class="header-anchor" href="#_7-版本控制-versioning"><span>7. <strong>版本控制（Versioning）</strong></span></a></h3><ul><li>API 的版本应该明确，以便在更新时不影响现有客户端。</li><li>常见的版本控制方式： <ul><li>URL 路径：<code>/v1/users</code>。</li><li>请求头：<code>Accept: application/vnd.example.v1+json</code>。</li></ul></li></ul><hr><h3 id="_8-过滤、排序和分页-filtering-sorting-pagination" tabindex="-1"><a class="header-anchor" href="#_8-过滤、排序和分页-filtering-sorting-pagination"><span>8. <strong>过滤、排序和分页（Filtering, Sorting, Pagination）</strong></span></a></h3><ul><li>对于返回大量资源的请求，应该支持过滤、排序和分页。</li><li>示例： <ul><li>过滤：<code>/users?age=25</code>。</li><li>排序：<code>/users?sort=name,asc</code>。</li><li>分页：<code>/users?page=2&amp;limit=10</code>。</li></ul></li></ul><hr><h3 id="_9-安全性-security" tabindex="-1"><a class="header-anchor" href="#_9-安全性-security"><span>9. <strong>安全性（Security）</strong></span></a></h3><ul><li>使用 HTTPS 加密通信。</li><li>使用身份验证和授权机制（如 OAuth、JWT）。</li><li>防止常见攻击（如 SQL 注入、XSS）。</li></ul><hr><h3 id="_10-hateoas-hypermedia-as-the-engine-of-application-state" tabindex="-1"><a class="header-anchor" href="#_10-hateoas-hypermedia-as-the-engine-of-application-state"><span>10. <strong>HATEOAS（Hypermedia as the Engine of Application State）</strong></span></a></h3><ul><li>在响应中提供相关资源的链接，使客户端能够动态发现和导航 API。</li><li>示例：<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">id</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">123</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">name</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">John</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">links</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">rel</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">self</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">href</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/users/123</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">rel</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">orders</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">href</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/users/123/orders</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h3 id="restful-api-示例" tabindex="-1"><a class="header-anchor" href="#restful-api-示例"><span>RESTful API 示例</span></a></h3><h4 id="获取用户列表" tabindex="-1"><a class="header-anchor" href="#获取用户列表"><span>获取用户列表</span></a></h4><ul><li>请求：<code>GET /users</code></li><li>响应：<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">id</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">name</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Alice</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">id</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">name</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Bob</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="创建用户" tabindex="-1"><a class="header-anchor" href="#创建用户"><span>创建用户</span></a></h4><ul><li>请求：<code>POST /users</code><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">name</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Charlie</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>响应：<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">id</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">name</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Charlie</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h4 id="更新用户" tabindex="-1"><a class="header-anchor" href="#更新用户"><span>更新用户</span></a></h4><ul><li>请求：<code>PUT /users/3</code><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">name</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Charlie</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Brown</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>响应：<div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">id</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">name</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Charlie</span><span class="space"> </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Brown</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h4 id="删除用户" tabindex="-1"><a class="header-anchor" href="#删除用户"><span>删除用户</span></a></h4><ul><li>请求：<code>DELETE /users/3</code></li><li>响应：<code>204 No Content</code></li></ul><hr><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>RESTful API 是一种基于 HTTP 协议的设计规范，强调资源的唯一标识、标准 HTTP 方法、无状态、统一接口等原则。遵循这些规范可以使 API 更易于理解、扩展和维护。</p>`,48)]))}const k=i(e,[["render",t],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/Network/nfha6u1l/","title":"Restful 风格 API","lang":"zh-CN","frontmatter":{"title":"Restful 风格 API","createTime":"2025/03/15 12:57:39","permalink":"/Network/nfha6u1l/"},"headers":[],"readingTime":{"minutes":4.87,"words":1461},"git":{"updatedTime":1742050940000,"contributors":[{"name":"kangkang shang","username":"kangkang shang","email":"535634238@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/kangkang shang?v=4","url":"https://github.com/kangkang shang"}]},"filePathRelative":"notes/Network/6.Restful 风格 API.md"}');export{k as comp,r as data};
