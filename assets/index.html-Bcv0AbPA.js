import{_ as a,c as i,a as n,o as t}from"./app-CrDOs8BQ.js";const e={};function p(l,s){return t(),i("div",null,s[0]||(s[0]=[n(`<p>在 Webpack 中，<strong>按需加载（Lazy Loading）</strong> 和 <strong>预加载（Preloading）</strong> 是两种不同的优化策略，它们的目标和使用场景有所不同。以下是它们的区别和具体应用：</p><hr><h2 id="一、概念" tabindex="-1"><a class="header-anchor" href="#一、概念"><span>一、概念</span></a></h2><h3 id="_1、按需加载-lazy-loading" tabindex="-1"><a class="header-anchor" href="#_1、按需加载-lazy-loading"><span>1、按需加载（Lazy Loading）</span></a></h3><p>按需加载的核心思想是 <strong>推迟加载</strong>，不需要的时候不加载，需要的时候再触发加载，这种方式可以减少初始加载时间，提升应用的性能。</p><p><strong>主要使用场景：</strong> 前端框架路由组件的懒加载、大型组件或模块的延迟加载、图片视频等静态资源的延迟加载。</p><h3 id="_2、预加载-preloading" tabindex="-1"><a class="header-anchor" href="#_2、预加载-preloading"><span>2、预加载（Preloading）</span></a></h3><p>预加载的核心思想是 <strong>优先加载关键资源</strong>，以便在需要时能够快速使用。这种方式可以提升用户体验，减少等待时间。</p><p><strong>主要使用场景：</strong> 关键资源（如图片、字体等）、核心结构需要的 CSS 文件等。</p><h3 id="_3、预取-prefetching" tabindex="-1"><a class="header-anchor" href="#_3、预取-prefetching"><span>3、预取（Prefetching）</span></a></h3><p>预取是预加载的一种特殊形式，它的核心思想是 <strong>在浏览器空闲时加载资源</strong>，以便在未来可能需要时使用。</p><p><strong>主要使用场景：</strong> 预取用户可能访问的页面或功能模块。预取非关键资源（如非首屏的图片、脚本等）。</p><h2 id="二、对比" tabindex="-1"><a class="header-anchor" href="#二、对比"><span>二、对比</span></a></h2><table><thead><tr><th>特性</th><th>按需加载（Lazy Loading）</th><th>预加载（Preloading）</th><th>预取（Prefetching）</th></tr></thead><tbody><tr><td><strong>加载时机</strong></td><td>需要时加载</td><td>提前加载</td><td>浏览器空闲时加载</td></tr><tr><td><strong>优先级</strong></td><td>高</td><td>高</td><td>低</td></tr><tr><td><strong>使用场景</strong></td><td>延迟加载非关键资源</td><td>提前加载即将使用的资源</td><td>预取未来可能使用的资源</td></tr><tr><td><strong>实现方式</strong></td><td><code>import()</code></td><td><code>import(/* webpackPreload: true */)</code></td><td><code>import(/* webpackPrefetch: true */)</code></td></tr><tr><td><strong>对性能的影响</strong></td><td>减少初始加载时间</td><td>提升用户体验，减少等待时间</td><td>优化未来访问的性能，优化即将可能发生的交互体验</td></tr></tbody></table><h2 id="三、代码示例" tabindex="-1"><a class="header-anchor" href="#三、代码示例"><span>三、代码示例</span></a></h2><h3 id="_1、按需加载" tabindex="-1"><a class="header-anchor" href="#_1、按需加载"><span>1、按需加载</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">用户点击按钮时加载模块</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">button</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">addEventListener</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">click</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=&gt;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">./Module</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">).</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">((</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=&gt;</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">default</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、预加载" tabindex="-1"><a class="header-anchor" href="#_2、预加载"><span>2、预加载</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">提前加载模块，以便快速使用</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/*</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">webpackPreload:</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">true</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">*/</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">./NextPage</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、预读取" tabindex="-1"><a class="header-anchor" href="#_3、预读取"><span>3、预读取</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">在浏览器空闲时加载模块，以备未来使用</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/*</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">webpackPrefetch:</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">true</span><span class="space"> </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">*/</span><span class="space"> </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">./FutureModule</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,21)]))}const d=a(e,[["render",p],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/Webpack/lyiknj0o/","title":"动态导入（Dynamic Imports）和预加载（Preloading）的区别？","lang":"zh-CN","frontmatter":{"title":"动态导入（Dynamic Imports）和预加载（Preloading）的区别？","createTime":"2025/03/15 14:24:21","permalink":"/Webpack/lyiknj0o/"},"headers":[],"readingTime":{"minutes":1.91,"words":572},"git":{"updatedTime":1742050940000,"contributors":[{"name":"kangkang shang","username":"kangkang shang","email":"535634238@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/kangkang shang?v=4","url":"https://github.com/kangkang shang"}]},"filePathRelative":"notes/Webpack/99.面试题/动态导入（Dynamic Imports）和预加载（Preloading）的区别？.md"}');export{d as comp,r as data};
