import{_ as n,c as e,e as l,a as g,f as r,g as s,o as i,d as a}from"./app-CrDOs8BQ.js";const d={};function B(M,t){const o=s("font");return i(),e("div",null,[l(o,{color:"red"},{default:r(()=>t[0]||(t[0]=[a("本文以 Mongo shell 命令行来举例")])),_:1}),t[1]||(t[1]=g('<h2 id="一、简介" tabindex="-1"><a class="header-anchor" href="#一、简介"><span>一、简介</span></a></h2><p>MongoDB 是一个流行的开源文档型数据库，它使用类似 JSON 的文档模型存储数据，这使得数据存储变得非常灵活。</p><p>MongoDB 是一个基于文档的 NoSQL 数据库，由 MongoDB Inc. 开发。</p><p>MongoDB 旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能</p><h2 id="二、特点" tabindex="-1"><a class="header-anchor" href="#二、特点"><span>二、特点</span></a></h2><p>MongoDB 的一些关键特点：</p><ul><li><strong>文档导向</strong>：MongoDB 存储 BSON（二进制 JSON）文档，这些文档可以包含复杂的数据结构，如数组和嵌套对象。</li><li><strong>高性能</strong>：MongoDB 提供了高性能的数据持久化和查询能力，特别是对于写入密集型的应用。</li><li><strong>水平扩展</strong>：通过分片（sharding）技术，MongoDB 可以在多个服务器之间分布数据，实现水平扩展。</li><li><strong>高可用性</strong>：MongoDB 支持副本集（replica sets），提供数据的自动故障转移和数据冗余。</li><li><strong>灵活的聚合框架</strong>：MongoDB 提供了一个强大的聚合框架，允许执行复杂的数据处理和聚合操作。</li><li><strong>丰富的查询语言</strong>：MongoDB 的查询语言（MQL）支持丰富的查询操作，包括文本搜索、地理位置查询等。</li><li><strong>存储过程</strong>：MongoDB 支持在数据库内部执行 JavaScript 代码，允许定义和执行复杂的数据处理逻辑。</li><li><strong>GridFS</strong>：对于存储大于 BSON 文档大小限制（16MB）的文件，MongoDB 提供了 GridFS，一种用于存储和检索大文件的规范。</li><li><strong>安全性</strong>：MongoDB 提供了多层次的安全特性，包括认证、授权和加密。</li><li><strong>驱动程序和工具</strong>：MongoDB 拥有广泛的驱动程序支持，适用于不同的编程语言，以及各种管理工具和可视化界面。</li><li><strong>社区和生态系统</strong>：MongoDB 拥有一个活跃的开发者社区，提供了大量的教程、文档和第三方工具。</li></ul><p>MongoDB 的这些特性使其成为一个非常灵活和功能丰富的数据库解决方案，尤其适合处理大量的半结构化或非结构化数据。</p><h2 id="三、概念解析" tabindex="-1"><a class="header-anchor" href="#三、概念解析"><span>三、概念解析</span></a></h2><p>不管我们学习什么数据库都应该学习其中的基础概念，在 MongoDB 中基本的概念是文档、集合、数据库，下面我们挨个介绍。</p><p>下表将帮助我们理解 MongoDB 中的一些概念：</p><table><thead><tr><th style="text-align:left;">SQL 术语/概念</th><th style="text-align:left;">MongoDB 术语/概念</th><th style="text-align:left;">解释/说明</th></tr></thead><tbody><tr><td style="text-align:left;">database</td><td style="text-align:left;">database</td><td style="text-align:left;">数据库</td></tr><tr><td style="text-align:left;">table</td><td style="text-align:left;">collection</td><td style="text-align:left;">数据库表/集合</td></tr><tr><td style="text-align:left;">row</td><td style="text-align:left;">document</td><td style="text-align:left;">数据记录行/文档</td></tr><tr><td style="text-align:left;">column</td><td style="text-align:left;">field</td><td style="text-align:left;">数据字段/域</td></tr><tr><td style="text-align:left;">index</td><td style="text-align:left;">index</td><td style="text-align:left;">索引</td></tr><tr><td style="text-align:left;">table joins</td><td style="text-align:left;"></td><td style="text-align:left;">表连接,MongoDB 不支持</td></tr><tr><td style="text-align:left;">primary key</td><td style="text-align:left;">primary key</td><td style="text-align:left;">主键,MongoDB 自动将_id 字段设置为主键</td></tr></tbody></table><h2 id="四、完整术语列表" tabindex="-1"><a class="header-anchor" href="#四、完整术语列表"><span>四、完整术语列表</span></a></h2><ul><li><strong>文档（Document）</strong>：MongoDB 的基本数据单元，通常是一个 JSON-like 的结构，可以包含多种数据类型。</li><li><strong>集合（Collection）</strong>：类似于关系型数据库中的表，集合是一组文档的容器。在 MongoDB 中，一个集合中的文档不需要有一个固定的模式。</li><li><strong>数据库（Database）</strong>：包含一个或多个集合的 MongoDB 实例。</li><li><strong>BSON</strong>：Binary JSON 的缩写，是 MongoDB 用来存储和传输文档的二进制形式的 JSON。</li><li><strong>索引（Index）</strong>：用于优化查询性能的数据结构，可以基于集合中的一个或多个字段创建索引。</li><li><strong>分片（Sharding）</strong>：一种分布数据到多个服务器（称为分片）的方法，用于处理大数据集和高吞吐量应用。</li><li><strong>副本集（Replica Set）</strong>：一组维护相同数据集的 MongoDB 服务器，提供数据的冗余备份和高可用性。</li><li><strong>主节点（Primary）</strong>：副本集中负责处理所有写入操作的服务器。</li><li><strong>从节点（Secondary）</strong>：副本集中的服务器，用于读取数据和在主节点故障时接管为主节点。</li><li><strong>MongoDB Shell</strong>：MongoDB 提供的命令行界面，用于与 MongoDB 实例交互。</li><li><strong>聚合框架（Aggregation Framework）</strong>：用于执行复杂的数据处理和聚合操作的一系列操作。</li><li><strong>Map-Reduce</strong>：一种编程模型，用于处理大量数据集的并行计算。</li><li><strong>GridFS</strong>：用于存储和检索大于 BSON 文档大小限制的文件的规范。</li><li><strong>ObjectId</strong>：MongoDB 为每个文档自动生成的唯一标识符。</li><li><strong>CRUD 操作</strong>：创建（Create）、读取（Read）、更新（Update）、删除（Delete）操作。</li><li><strong>事务（Transactions）</strong>：从 MongoDB 4.0 开始支持，允许一组操作作为一个原子单元执行。</li><li><strong>操作符（Operators）</strong>：用于查询和更新文档的特殊字段。</li><li><strong>连接（Join）</strong>：MongoDB 允许在查询中使用 <code>$lookup</code> 操作符来实现类似 SQL 的连接操作。</li><li><strong>TTL（Time-To-Live）</strong>：可以为集合中的某些字段设置 TTL，以自动删除旧数据。</li><li><strong>存储引擎（Storage Engine）</strong>：MongoDB 用于数据存储和管理的底层技术，如 WiredTiger 和 MongoDB 的旧存储引擎 MMAPv1。</li><li><strong>MongoDB Compass</strong>：MongoDB 的图形界面工具，用于可视化和管理 MongoDB 数据。</li><li><strong>MongoDB Atlas</strong>：MongoDB 提供的云服务，允许在云中托管 MongoDB 数据库。</li></ul><h2 id="五、常见的几个命令" tabindex="-1"><a class="header-anchor" href="#五、常见的几个命令"><span>五、常见的几个命令</span></a></h2><ul><li><strong>mongod：</strong> 启动 MongoDB 服务</li><li><strong>mongo：</strong> 连接 MongoDb 数据库</li></ul>',17))])}const p=n(d,[["render",B],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/MongoDB/o53f9jpr/","title":"MongoDB 介绍","lang":"zh-CN","frontmatter":{"title":"MongoDB 介绍","createTime":"2025/03/15 13:57:17","permalink":"/MongoDB/o53f9jpr/"},"headers":[],"readingTime":{"minutes":4.46,"words":1337},"git":{"updatedTime":1742050940000,"contributors":[{"name":"kangkang shang","username":"kangkang shang","email":"535634238@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/kangkang shang?v=4","url":"https://github.com/kangkang shang"}]},"filePathRelative":"notes/MongoDB/1.MongoDB/1. MangoDB 介绍.md"}');export{p as comp,h as data};
