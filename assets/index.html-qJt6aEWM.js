import{_ as e,c as t,a as o,o as n}from"./app-CrDOs8BQ.js";const s={};function i(r,a){return n(),t("div",null,a[0]||(a[0]=[o("<p>ETag（<code>Entity Tag</code>）是<strong>一个由服务器生成的用于标识资源的唯一标识符</strong>。</p><p>ETag <strong>在浏览器缓存中的作用是协商缓存的一部分</strong>。当浏览器发送请求时，会将上一次请求返回的 ETag 值通过 If-None-Match 请求头字段发送给服务器。服务器使用这个值与当前资源的 ETag 进行比较，以判断资源是否发生了变化。</p><p><strong>如果服务器发现资源的 ETag 值与浏览器发送的匹配，并且资源没有发生变化，服务器会返回状态码 304 Not Modified</strong>，表示资源未修改。浏览器收到这个响应后，可以直接从缓存中获取资源，而无需重新下载。</p><p><strong>ETag 能够精确地确定资源是否发生了变化，相对于 Last-Modified（最后修改时间）来说更加准确</strong>。如果资源的内容发生了任何改变，服务器会为该资源生成新的 <code>ETag</code> 值，而 Last-Modified 只能以秒级别的精度表示时间，可能无法捕捉到非常小的修改。</p><p>在大多数情况下，浏览器会使用 <code>Cache-Control</code> 和 <code>ETag</code>（或 Last-Modified）一起使用，以提供更精确和可靠的缓存控制。当 Cache-Control 的缓存过期策略失效时，浏览器会使用 ETag 和服务器进行协商，以便确定是否可以使用缓存的副本。如果服务器返回 304 Not Modified，浏览器就可以直接使用缓存，并避免重新下载资源。这样可以减少网络带宽的使用，并提高页面加载速度和性能。</p>",5)]))}const c=e(s,[["render",i],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/WebBasic/u13dvwae/","title":"9","lang":"zh-CN","frontmatter":{"title":9,"createTime":"2025/03/15 13:30:19","permalink":"/WebBasic/u13dvwae/"},"headers":[],"readingTime":{"minutes":1.47,"words":440},"git":{"updatedTime":1742050940000,"contributors":[{"name":"kangkang shang","username":"kangkang shang","email":"535634238@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/kangkang shang?v=4","url":"https://github.com/kangkang shang"}]},"filePathRelative":"notes/WebBasic/2.浏览器相关/9.md"}');export{c as comp,d as data};
