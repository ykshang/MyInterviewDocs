import{_ as a,c as p,a as n,o as i}from"./app-CrDOs8BQ.js";const e={};function l(c,s){return i(),p("div",null,s[0]||(s[0]=[n(`<p><code>‌express-generator‌</code> 是一个基于<code>Express</code> 框架的应用程序生成器工具，用于快速创建<code>Express 应用程序</code>的基本骨架。它可以帮助开发者节省大量手动创建文件和配置的时间，提高开发效率。</p><h2 id="一、特点" tabindex="-1"><a class="header-anchor" href="#一、特点"><span>一、特点</span></a></h2><ul><li><p>‌<strong>快速生成项目结构</strong>‌：通过运行 express-generator 命令，可以快速生成一个预定义的 Express 应用程序结构，包括基本的目录布局和文件。</p></li><li><p>‌<strong>内置常用中间件和依赖</strong>‌：生成的项目默认包含一些常用的中间件和依赖，如 <code>express</code>、<code>body-parser</code>、<code>cookie-parser</code> 等，满足大多数基本需求。</p></li><li><p>‌<strong>可定制的模板引擎</strong>‌：支持多种模板引擎，如 Pug、EJS、Handlebars 等，可以通过命令行参数指定使用的模板引擎。</p></li><li><p>‌<strong>路由文件分离</strong>‌：将路由逻辑分离到单独的文件中，提高代码的可读性和可维护性。</p></li></ul><h2 id="二、-使用方法" tabindex="-1"><a class="header-anchor" href="#二、-使用方法"><span>二、 使用方法</span></a></h2><ol><li><p>‌<strong>全局安装</strong>‌</p><p>首先，确保你已经安装了 Node.js 和 npm。然后，通过<code>npm install -g express-generator</code>命令全局安装</p></li><li><p>‌<strong>创建项目骨架</strong>‌</p><p>在命令行中，使用<code>express my-express-app</code>命令创建一个新的 Express 项目。这将在当前目录下创建一个名为 <code>my-express-app</code> 的文件夹，并在其中生成一系列文件和文件夹，构成 Express 项目的基本框架。</p></li><li><p>‌<strong>安装项目依赖</strong>‌</p><p>进入项目目录并安装所需的依赖：</p></li></ol><h2 id="三、项目结构" tabindex="-1"><a class="header-anchor" href="#三、项目结构"><span>三、项目结构</span></a></h2><div class="language-powershell line-numbers-mode" data-ext="powershell" data-title="powershell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">app.js</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">//</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">核心入口，引入各种配置</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">bin</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">└──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">www</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">//</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">负责启动服务器，加载</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">app.js</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">中的配置并监听指定端口。</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">package.json</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">public</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">//</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">静态资源</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">images</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">javascripts</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">└──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">stylesheets</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">└──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">style.css</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">routes</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">//</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">包含各种路由文件，用于定义不同路径下的请求处理逻辑。</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">index.js</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">//</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">例如，index.js</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">处理根路径</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">的请求。</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">│</span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">└──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">users.js</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">//</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">users.js</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">处理路径</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">/</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">user</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">的请求。</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">└──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">views</span><span class="space"> </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">//</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">用于存放视图文件（如果项目使用视图模板引擎）。常见模板引擎有</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">EJS、Pug</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">等。</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">error.jade</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">├──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">index.jade</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">└──</span><span class="space"> </span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">layout.jadea</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7)]))}const t=a(e,[["render",l],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/Express/q4cx5k2r/","title":"express-generator 生成器","lang":"zh-CN","frontmatter":{"title":"express-generator 生成器","createTime":"2025/03/13 20:02:03","permalink":"/Express/q4cx5k2r/"},"headers":[],"readingTime":{"minutes":1.73,"words":520},"git":{"updatedTime":1742050940000,"contributors":[{"name":"kangkang shang","username":"kangkang shang","email":"535634238@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/kangkang shang?v=4","url":"https://github.com/kangkang shang"}]},"filePathRelative":"notes/Express/1.学习笔记/7.express-generator 生成器.md"}');export{t as comp,k as data};
